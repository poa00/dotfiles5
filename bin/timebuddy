#!/usr/bin/env sh
# Compare columns of hours in a day across multiple timezones
#
# This provides a quick way to compare times across multiple timezones. For
# example, you need to book a meeting with coworkers in multiple timezones and
# want to know what daylight hours overlap in each.
#
# Example output:
#
# % timebuddy EST America/New_York UTC
# Thu  00 01 02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23  Thu - America/Denver
# Thu  02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 00 01  Fri - EST
# Thu  02 03 04 05 06 07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 00 01  Fri - America/New_York
# Thu  07 08 09 10 11 12 13 14 15 16 17 18 19 20 21 22 23 00 01 02 03 04 05 06  Fri - UTC
#
# Specify a date (accepts any string GNU date will consume):
#
# % timebuddy -d 2022-03-13 UTC America/New_York
#
# Pair with a fuzzy-finder to quickly look up timezone formats.
# E.g.: ftimezone | xargs timebuddy
#
# Format inspired by https://www.worldtimebuddy.com
#
# Requirements: GNU date, seq, /usr/share/zoneinfo

fmt_hours () {
    awk '
    NR == 1 { printf("%s  ", $1) }

    {
        printf("%s%s", spc, $2)
        spc=" "
    }

    END { printf("  %s", $1) }
    '
}

get_hours () {
    cur="${1:?'Current timezone required.'}"
    tgt="${2:?'Target timezone required.'}"
    datestr="${3:-today}"
    offset="$(TZ="$cur" date +%z)"

    seq -w 0 23 |
        xargs -I{} printf 'TZ="%s" %s {}:00 %s\n' "$cur" "$datestr" "$offset" |
        TZ="$tgt" date +'%a %H' -f - |
        fmt_hours
    printf ' - %s\n' "$tgt"
}

validate_tz () {
    tz="${1:?'Timezone required.'}"

    if [ ! -e "/usr/share/zoneinfo/${tz}" ]; then
        printf 'Unknown timezone: %s\n' "$tz" 1>&2
        exit 1
    fi
}

_main () {
    while getopts hd: opt; do
        case $opt in
        d) datestr="$OPTARG";;
        h) awk 'NR == 1 { next } /^$/ { exit } { print substr($0, 3) }' "$0"
           exit ;;
        esac
    done
    shift $(( OPTIND - 1 ))

    localtime="$(readlink /etc/localtime)"
    timezone="${localtime#*zoneinfo/}"
    validate_tz "$timezone"

    get_hours "$timezone" "$timezone" "$datestr"
    for tz in "$@"; do
        validate_tz "$tz"
        get_hours "$timezone" "$tz" "$datestr"
    done
}

_main "$@"
